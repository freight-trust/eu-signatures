{"version":3,"sources":["../src/ArchiveTimeStampV3.js"],"names":["asn1js","ArchiveTimeStampV3","ContentInfo","constructor","parameters","tspResponse","defaultValues","aTSHashIndex","fromSchema","schema","memberName","ArrayBuffer","ATSHashIndex","Error","compareWithDefault","memberValue","byteLength","certificatesHashIndex","crlsHashIndex","unsignedAttrsHashIndex","initValues","contentType","TimeStampResp","timeStampToken","cmsSignedData","SignedData","content","signerInfos","length","unsignedAttrs","attributes","attribute","Attribute","type","parsedValue","values","e","getStampingBuffer","signerIndex","sequence","Promise","resolve","hashAlgorithm","resultBuffer","crypto","reject","encapContentInfo","eContent","idBlock","tagClass","tagNumber","isConstructed","valueBlock","valueHex","i","value","then","digest","name","error","result","contentOID","ObjectIdentifier","eContentType","toBER","version","Integer","sid","IssuerAndSerialNumber","toSchema","digestAlgorithm","signedAttrs","signatureAlgorithm","signature","makeAttribute","asn1","fromBER","SignedAndUnsignedAttributes"],"mappings":"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","file":"ArchiveTimeStampV3.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, utilConcatBuf } from \"pvutils\";\r\nimport { getCrypto, ContentInfo, SignedData, IssuerAndSerialNumber, Attribute, TimeStampResp, SignedAndUnsignedAttributes } from \"pkijs\";\r\nimport ATSHashIndex from \"./ATSHashIndex.js\";\r\n//**************************************************************************************\r\n// noinspection JSUnusedGlobalSymbols\r\nexport default class ArchiveTimeStampV3 extends ContentInfo\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for ArchiveTimeStampV3 class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\t\t\r\n\t\t//region Internal properties of the object\r\n\t\tif(\"tspResponse\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {ArrayBuffer}\r\n\t\t\t * @description tspResponse\r\n\t\t\t */\r\n\t\t\tthis.tspResponse = getParametersValue(parameters, \"tspResponse\", ArchiveTimeStampV3.defaultValues(\"tspResponse\"));\r\n\t\t\r\n\t\t/**\r\n\t\t * @type {ATSHashIndex}\r\n\t\t * @description aTSHashIndex\r\n\t\t */\r\n\t\tthis.aTSHashIndex = getParametersValue(parameters, \"aTSHashIndex\", ArchiveTimeStampV3.defaultValues(\"aTSHashIndex\"));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"tspResponse\":\r\n\t\t\t\treturn new ArrayBuffer(0);\r\n\t\t\tcase \"aTSHashIndex\":\r\n\t\t\t\treturn new ATSHashIndex();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ArchiveTimeStampV3 class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"tspResponse\":\r\n\t\t\t\treturn (memberValue.byteLength === 0);\r\n\t\t\tcase \"aTSHashIndex\":\r\n\t\t\t\t// noinspection OverlyComplexBooleanExpressionJS\r\n\t\t\t\treturn (((\"hashIndAlgorithm\" in memberValue) === false) &&\r\n\t\t\t\t\t\t(ATSHashIndex.compareWithDefault(\"certificatesHashIndex\", memberValue.certificatesHashIndex)) &&\r\n\t\t\t\t\t\t(ATSHashIndex.compareWithDefault(\"crlsHashIndex\", memberValue.crlsHashIndex)) &&\r\n\t\t\t\t\t\t(ATSHashIndex.compareWithDefault(\"unsignedAttrsHashIndex\", memberValue.unsignedAttrsHashIndex)));\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ArchiveTimeStampV3 class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t * @param {boolean} [initValues=true]\r\n\t */\r\n\tfromSchema(schema, initValues = true)\r\n\t{\r\n\t\tsuper.fromSchema(schema);\r\n\t\t\r\n\t\tif(initValues)\r\n\t\t{\r\n\t\t\tif(this.contentType !== \"1.2.840.113549.1.7.2\")\r\n\t\t\t\tthrow new Error(\"Incorrect object schema for archive-time-stamp-v3 attribute: incorrect content type\");\r\n\t\t\t\r\n\t\t\tthis.tspResponse = new TimeStampResp({ timeStampToken: schema });\r\n\t\t\t\r\n\t\t\tconst cmsSignedData = new SignedData({ schema: this.content });\r\n\t\t\t\r\n\t\t\tif(cmsSignedData.signerInfos.length !== 1)\r\n\t\t\t\tthrow new Error(\"Incorrect object schema for archive-time-stamp-v3 attribute: incorrect signerInfos length\");\r\n\t\t\t\r\n\t\t\tif((\"unsignedAttrs\" in cmsSignedData.signerInfos[0]) === false)\r\n\t\t\t\tthrow new Error(\"Incorrect object schema for archive-time-stamp-v3 attribute: missing unsignedAttrs\");\r\n\t\t\t\r\n\t\t\tif(cmsSignedData.signerInfos[0].unsignedAttrs.attributes.length !== 1)\r\n\t\t\t\tthrow new Error(\"Incorrect object schema for archive-time-stamp-v3 attribute: incorrect unsignedAttrs length\");\r\n\t\t\t\r\n\t\t\tconst attribute = new Attribute(cmsSignedData.signerInfos[0].unsignedAttrs.attributes[0]);\r\n\t\t\t\r\n\t\t\tif(attribute.type !== \"0.4.0.1733.2.5\")\r\n\t\t\t\tthrow new Error(\"Incorrect object schema for archive-time-stamp-v3 attribute: incorrect type for aTSHashIndex value\");\r\n\t\t\t\r\n\t\t\tlet parsedValue;\r\n\t\t\t\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tparsedValue = new ATSHashIndex({ schema: attribute.values[0] });\r\n\t\t\t}\r\n\t\t\tcatch(e)\r\n\t\t\t{\r\n\t\t\t\tthrow new Error(\"Incorrect object schema for archive-time-stamp-v3 attribute: incorrect aTSHashIndex value\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.aTSHashIndex = parsedValue;\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Get \"ArrayBuffer\" to transfer to time-stamp server\r\n\t * @param {SignedData} cmsSignedData CMS Signed Data to make attribute for\r\n\t * @param {number} signerIndex Index of signer to make attribute for\r\n\t * @param {Object} parameters Additional parameters for making attribute\r\n\t * @returns {Promise}\r\n\t */\r\n\tgetStampingBuffer(cmsSignedData, signerIndex, parameters)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tlet sequence = Promise.resolve();\r\n\t\t\r\n\t\tlet hashAlgorithm = \"SHA-256\";\r\n\t\t\r\n\t\tlet content = new ArrayBuffer(0);\r\n\t\tlet aTSHashIndex = new ArrayBuffer(0);\r\n\t\t\r\n\t\tlet resultBuffer = new ArrayBuffer(0);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get a \"crypto\" extension\r\n\t\tconst crypto = getCrypto();\r\n\t\tif(typeof crypto === \"undefined\")\r\n\t\t\treturn Promise.reject(\"Unable to create WebCrypto object\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check input parameters\r\n\t\tif(\"hashAlgorithm\" in parameters)\r\n\t\t\thashAlgorithm = parameters.hashAlgorithm;\r\n\t\t\r\n\t\tif(\"content\" in parameters)\r\n\t\t\tcontent = parameters.content; // ArrayBuffer\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(\"eContent\" in cmsSignedData.encapContentInfo)\r\n\t\t\t{\r\n\t\t\t\tif((cmsSignedData.encapContentInfo.eContent.idBlock.tagClass === 1) &&\r\n\t\t\t\t\t(cmsSignedData.encapContentInfo.eContent.idBlock.tagNumber === 4))\r\n\t\t\t\t{\r\n\t\t\t\t\tif(cmsSignedData.encapContentInfo.eContent.idBlock.isConstructed === false)\r\n\t\t\t\t\t\tcontent = cmsSignedData.encapContentInfo.eContent.valueBlock.valueHex;\r\n\t\t\t\t\telse\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfor(let i = 0; i < cmsSignedData.encapContentInfo.eContent.valueBlock.value.length; i++)\r\n\t\t\t\t\t\t\tcontent = utilConcatBuf(content, cmsSignedData.encapContentInfo.eContent.valueBlock.value[i].valueBlock.valueHex);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\tcontent = cmsSignedData.encapContentInfo.eContent.valueBlock.valueHex;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\treturn Promise.reject(\"Parameter \\\"content\\\" is mandatory for making archive-time-stamp-v3\");\r\n\t\t}\r\n\t\t\r\n\t\tif(\"aTSHashIndex\" in parameters)\r\n\t\t\taTSHashIndex = parameters.aTSHashIndex; // ArrayBuffer\r\n\t\telse\r\n\t\t\treturn Promise.reject(\"Parameter \\\"aTSHashIndex\\\" is mandatory for making archive-time-stamp-v3\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Make hash of initial content\r\n\t\tsequence = sequence.then(\r\n\t\t\t() => crypto.digest({ name: hashAlgorithm }, content),\r\n\t\t\terror => Promise.reject(error)\r\n\t\t);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Make final stamping buffer\r\n\t\tsequence = sequence.then(\r\n\t\t\tresult => {\r\n\t\t\t\t//region eContentType\r\n\t\t\t\tconst contentOID = new asn1js.ObjectIdentifier({ value: cmsSignedData.encapContentInfo.eContentType });\r\n\t\t\t\tresultBuffer = utilConcatBuf(resultBuffer, contentOID.toBER(false));\r\n\t\t\t\t//endregion\r\n\t\t\t\t\r\n\t\t\t\t//region message-digest\r\n\t\t\t\t// noinspection JSCheckFunctionSignatures\r\n\t\t\t\tresultBuffer = utilConcatBuf(resultBuffer, result);\r\n\t\t\t\t//endregion\r\n\t\t\t\t\r\n\t\t\t\t//region version\r\n\t\t\t\tconst version = new asn1js.Integer({ value: cmsSignedData.signerInfos[signerIndex].version });\r\n\t\t\t\tresultBuffer = utilConcatBuf(resultBuffer, version.toBER(false));\r\n\t\t\t\t//endregion\r\n\t\t\t\t\r\n\t\t\t\t//region sid\r\n\t\t\t\tlet sid;\r\n\t\t\t\t\r\n\t\t\t\tif(cmsSignedData.signerInfos[signerIndex].sid instanceof IssuerAndSerialNumber)\r\n\t\t\t\t\tsid = cmsSignedData.signerInfos[signerIndex].sid.toSchema();\r\n\t\t\t\telse\r\n\t\t\t\t\tsid = cmsSignedData.signerInfos[signerIndex].sid;\r\n\t\t\t\t\r\n\t\t\t\tresultBuffer = utilConcatBuf(resultBuffer, sid.toBER(false));\r\n\t\t\t\t//endregion\r\n\t\t\t\t\r\n\t\t\t\t//region digestAlgorithm\r\n\t\t\t\tresultBuffer = utilConcatBuf(resultBuffer, cmsSignedData.signerInfos[signerIndex].digestAlgorithm.toSchema().toBER(false));\r\n\t\t\t\t//endregion\r\n\t\t\t\t\r\n\t\t\t\t//region signedAttrs\r\n\t\t\t\tif(\"signedAttrs\" in cmsSignedData.signerInfos[signerIndex])\r\n\t\t\t\t\tresultBuffer = utilConcatBuf(resultBuffer, cmsSignedData.signerInfos[signerIndex].signedAttrs.toSchema().toBER(false));\r\n\t\t\t\telse\r\n\t\t\t\t\treturn Promise.reject(\"Must be \\\"signedAttrs\\\" inside SignerInfo structure. Check correctness of the signed data.\");\r\n\t\t\t\t//endregion\r\n\t\t\t\t\r\n\t\t\t\t//region signatureAlgorithm\r\n\t\t\t\tresultBuffer = utilConcatBuf(resultBuffer, cmsSignedData.signerInfos[signerIndex].signatureAlgorithm.toSchema().toBER(false));\r\n\t\t\t\t//endregion\r\n\t\t\t\t\r\n\t\t\t\t//region signature\r\n\t\t\t\tresultBuffer = utilConcatBuf(resultBuffer, cmsSignedData.signerInfos[signerIndex].signature.toBER(false));\r\n\t\t\t\t//endregion\r\n\t\t\t\t\r\n\t\t\t\t//region ATSHashIndexV2\r\n\t\t\t\tresultBuffer = utilConcatBuf(resultBuffer, aTSHashIndex);\r\n\t\t\t\t//endregion\r\n\t\t\t\t\r\n\t\t\t\treturn resultBuffer;\r\n\t\t\t},\r\n\t\t\terror => Promise.reject(error)\r\n\t\t);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Make hash of result buffer\r\n\t\tsequence = sequence.then(\r\n\t\t\tresult => crypto.digest({ name: hashAlgorithm }, result),\r\n\t\t\terror => Promise.reject(error)\r\n\t\t);\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn sequence;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Create \"archive-time-stamp-v3\" CAdES attribute\r\n\t * @param {Object} [parameters] Additional parameters for making attribute\r\n\t * @returns {Attribute}\r\n\t */\r\n\tmakeAttribute(parameters = {})\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tlet tspResponse;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check input parameters\r\n\t\tif(\"tspResponse\" in parameters)\r\n\t\t\ttspResponse = parameters.tspResponse;\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(\"tspResponse\" in this)\r\n\t\t\t\ttspResponse = this.tspResponse;\r\n\t\t\telse\r\n\t\t\t\tthrow new Error(\"Parameter \\\"tspResponse\\\" is mandatory for making archive-time-stamp-v3 attribute\");\r\n\t\t}\r\n\t\t\r\n\t\tthis.tspResponse = tspResponse;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Change type of \"tspResponse\"\r\n\t\tconst asn1 = asn1js.fromBER(tspResponse);\r\n\t\ttspResponse = new TimeStampResp({ schema: asn1.result });\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initialize internal variables from \"tspResponse\"\r\n\t\tif(\"timeStampToken\" in tspResponse)\r\n\t\t\tthis.fromSchema(tspResponse.timeStampToken.toSchema(), false);\r\n\t\telse\r\n\t\t\tthrow new Error(\"No neccessary \\\"timeStampToken\\\" inside \\\"tspResponse\\\"\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Append \"ATSHashIndex\" into local unsigned attributes\r\n\t\tconst cmsSignedData = new SignedData({ schema: this.content });\r\n\t\t\r\n\t\tcmsSignedData.signerInfos[0].unsignedAttrs = new SignedAndUnsignedAttributes({\r\n\t\t\ttype: 1, // UnsignedAttributes\r\n\t\t\tattributes: [\r\n\t\t\t\tthis.aTSHashIndex.makeAttribute()\r\n\t\t\t]\r\n\t\t});\r\n\t\t\r\n\t\tthis.content = cmsSignedData.toSchema();\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Create and return attribute\r\n\t\treturn new Attribute({\r\n\t\t\ttype: \"0.4.0.1733.2.4\",\r\n\t\t\tvalues: [\r\n\t\t\t\tthis.toSchema()\r\n\t\t\t]\r\n\t\t});\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}
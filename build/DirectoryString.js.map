{"version":3,"sources":["../src/DirectoryString.js"],"names":["asn1js","DirectoryString","constructor","parameters","type","defaultValues","value","fromSchema","schema","memberName","Error","compareWithDefault","memberValue","asn1","compareSchema","Choice","TeletexString","name","PrintableString","UniversalString","Utf8String","BmpString","verified","result","directoryString","valueBlock","idBlock","tagNumber","toSchema","toJSON"],"mappings":"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","file":"DirectoryString.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue } from \"pvutils\";\r\n//**************************************************************************************\r\nexport default class DirectoryString\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for DirectoryString class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @description 0 - TELETEXSTRING, 1 - PRINTABLESTRING, 2 - UNIVERSALSTRING, 3 - UTF8STRING, 4 - BMPSTRING\r\n\t\t */\r\n\t\tthis.type = getParametersValue(parameters, \"type\", DirectoryString.defaultValues(\"type\"));\r\n\t\t/**\r\n\t\t * @type {Array}\r\n\t\t * @description value\r\n\t\t */\r\n\t\tthis.value = getParametersValue(parameters, \"value\", DirectoryString.defaultValues(\"value\"));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"type\":\r\n\t\t\t\treturn (-1);\r\n\t\t\tcase \"value\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for DirectoryString class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"type\":\r\n\t\t\t\treturn (memberValue === DirectoryString.defaultValues(memberName));\r\n\t\t\tcase \"values\":\r\n\t\t\t\treturn (memberValue === \"\");\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for DirectoryString class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tnew asn1js.Choice({\r\n\t\t\t\tvalue: [\r\n\t\t\t\t\tnew asn1js.TeletexString({ name: \"directoryString\" }),\r\n\t\t\t\t\tnew asn1js.PrintableString({ name: \"directoryString\" }),\r\n\t\t\t\t\tnew asn1js.UniversalString({ name: \"directoryString\" }),\r\n\t\t\t\t\tnew asn1js.Utf8String({ name: \"directoryString\" }),\r\n\t\t\t\t\tnew asn1js.BmpString({ name: \"directoryString\" })\r\n\t\t\t\t]\r\n\t\t\t})\r\n\t\t);\r\n\t\t\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for DirectoryString\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get internal properties from parsed schema\r\n\t\t// noinspection JSUnresolvedVariable\r\n\t\tthis.value = asn1.result.directoryString.valueBlock.value;\r\n\t\t\r\n\t\t// noinspection JSUnresolvedVariable\r\n\t\tswitch(asn1.result.directoryString.idBlock.tagNumber)\r\n\t\t{\r\n\t\t\tcase 20: // TELETEXSTRING\r\n\t\t\t\tthis.type = 0;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 19: // PRINTABLESTRING\r\n\t\t\t\tthis.type = 1;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 28: // UNIVERSALSTRING\r\n\t\t\t\tthis.type = 2;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 12: // UTF8STRING\r\n\t\t\t\tthis.type = 3;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 30: // BMPSTRING\r\n\t\t\t\tthis.type = 4;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"Object's schema was not verified against input data for DirectoryString\");\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tlet result;\r\n\t\t\r\n\t\tswitch(this.type)\r\n\t\t{\r\n\t\t\tcase 0: // TELETEXSTRING\r\n\t\t\t\tresult = new asn1js.TeletexString({ value: this.value });\r\n\t\t\t\tbreak;\r\n\t\t\tcase 1: // PRINTABLESTRING\r\n\t\t\t\tresult = new asn1js.PrintableString({ value: this.value });\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2: // UNIVERSALSTRING\r\n\t\t\t\tresult = new asn1js.UniversalString({ value: this.value });\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3: // UTF8STRING\r\n\t\t\t\tresult = new asn1js.Utf8String({ value: this.value });\r\n\t\t\t\tbreak;\r\n\t\t\tcase 4: // BMPSTRING\r\n\t\t\t\tresult = new asn1js.BmpString({ value: this.value });\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(\"Incorrectly initialized data for \\\"DirectoryString\\\" class\");\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn result;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\tvalue: this.value,\r\n\t\t\ttype: this.type\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}
{"version":3,"sources":["../src/OcspIdentifier.js"],"names":["asn1js","OcspIdentifier","constructor","parameters","ocspResponderID","defaultValues","producedAt","fromSchema","schema","memberName","Any","Date","Error","compareWithDefault","memberValue","names","Sequence","name","blockName","optional","value","Choice","Constructed","idBlock","tagClass","tagNumber","RelativeDistinguishedNames","OctetString","GeneralizedTime","asn1","compareSchema","verified","result","valueBlock","toDate","toSchema","outputArray","push","valueDate","toJSON","fillValues","ocspResponse","responseBytes","responseType","fromBER","response","valueHex","basicResponse","BasicOCSPResponse","tbsResponseData","responderID"],"mappings":"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","file":"OcspIdentifier.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue } from \"pvutils\";\r\nimport { RelativeDistinguishedNames, BasicOCSPResponse } from \"pkijs\";\r\n//**************************************************************************************\r\nexport default class OcspIdentifier\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for OcspIdentifier class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {RelativeDistinguishedNames|OctetString|Any}\r\n\t\t * @description ocspResponderID\r\n\t\t */\r\n\t\tthis.ocspResponderID = getParametersValue(parameters, \"ocspResponderID\", OcspIdentifier.defaultValues(\"ocspResponderID\"));\r\n\t\t/**\r\n\t\t * @type {Date}\r\n\t\t * @description producedAt\r\n\t\t */\r\n\t\tthis.producedAt = getParametersValue(parameters, \"producedAt\", OcspIdentifier.defaultValues(\"producedAt\"));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"ocspResponderID\":\r\n\t\t\t\treturn new asn1js.Any();\r\n\t\t\tcase \"producedAt\":\r\n\t\t\t\treturn new Date(0, 0, 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for OcspIdentifier class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"ocspResponderID\":\r\n\t\t\t\treturn (memberValue instanceof asn1js.Any);\r\n\t\t\tcase \"producedAt\":\r\n\t\t\t\treturn (memberValue === OcspIdentifier.defaultValues(memberName));\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for OcspIdentifier class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t// OcspIdentifier ::= SEQUENCE {\r\n\t\t//    ocspResponderID ResponderID, -- As in OCSP response data\r\n\t\t//    producedAt GeneralizedTime -- As in OCSP response data  }\r\n\t\t\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [ocspResponderID]\r\n\t\t * @property {string} [producedAt]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\toptional: (names.optional || false),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Choice({\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\tname: (names.ocspResponderID || \"\"),\r\n\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tvalue: [RelativeDistinguishedNames.schema()]\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\tname: (names.ocspResponderID || \"\"),\r\n\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tvalue: [new asn1js.OctetString()]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.GeneralizedTime({ name: (names.producedAt || \"\") })\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tOcspIdentifier.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tocspResponderID: \"ocspResponderID\",\r\n\t\t\t\t\tproducedAt: \"producedAt\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t\t\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for OcspIdentifier\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(asn1.result.ocspResponderID.idBlock.tagNumber === 1)\r\n\t\t\tthis.ocspResponderID = new RelativeDistinguishedNames({ schema: asn1.result.ocspResponderID.valueBlock.value[0] });\r\n\t\telse\r\n\t\t\tthis.ocspResponderID = asn1.result.ocspResponderID.valueBlock.value[0]; // OCTETSTRING\r\n\t\t\r\n\t\tthis.producedAt = asn1.result.producedAt.toDate();\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\tif(this.ocspResponderID instanceof asn1js.Any)\r\n\t\t\tthrow new Error(\"Incorrectly initialized \\\"OcspIdentifier\\\" class\");\r\n\t\t\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(this.ocspResponderID instanceof RelativeDistinguishedNames)\r\n\t\t\toutputArray.push(this.ocspResponderID.toSchema());\r\n\t\telse\r\n\t\t\toutputArray.push(this.ocspResponderID);\r\n\t\t\r\n\t\toutputArray.push(new asn1js.GeneralizedTime({ valueDate: this.producedAt }));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tif(this.ocspResponderID instanceof asn1js.Any)\r\n\t\t\tthrow new Error(\"Incorrectly initialized \\\"OcspIdentifier\\\" class\");\r\n\t\t\r\n\t\treturn {\r\n\t\t\tocspResponderID: this.ocspResponderID.toJSON(),\r\n\t\t\tproducedAt: this.producedAt\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Fill internal values of current class\r\n\t * @param {Object} parameters\r\n\t */\r\n\tfillValues(parameters)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tlet ocspResponse;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check input parameters\r\n\t\tif(\"ocspResponse\" in parameters)\r\n\t\t\tocspResponse = parameters.ocspResponse; // in_window.org.pkijs.simpl.OCSP_RESPONSE\r\n\t\telse\r\n\t\t\tthrow new Error(\"Parameter \\\"ocspResponse\\\" is mandatory for making \\\"OcspResponsesID\\\"\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Fill internal fields\r\n\t\tif(\"responseBytes\" in ocspResponse)\r\n\t\t{\r\n\t\t\tif(ocspResponse.responseBytes.responseType === \"1.3.6.1.5.5.7.48.1.1\") // id-pkix-ocsp-basic\r\n\t\t\t{\r\n\t\t\t\tconst asn1 = asn1js.fromBER(ocspResponse.responseBytes.response.valueBlock.valueHex);\r\n\t\t\t\tconst basicResponse = new BasicOCSPResponse({ schema: asn1.result });\r\n\t\t\t\t\r\n\t\t\t\tif(basicResponse.tbsResponseData.responderID instanceof RelativeDistinguishedNames)\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.ocspResponderID = new asn1js.Constructed({\r\n\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tvalue: [basicResponse.tbsResponseData.responderID.toSchema()]\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tthis.ocspResponderID = new asn1js.Constructed({\r\n\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tvalue: [basicResponse.tbsResponseData.responderID]\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tthis.producedAt = basicResponse.tbsResponseData.producedAt;\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}
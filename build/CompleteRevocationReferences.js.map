{"version":3,"sources":["../src/CompleteRevocationReferences.js"],"names":["CompleteRevocationReferences","CompleteRevocationRefs","constructor","parameters","fillValues","cmsSigned","signerIndex","_this","sequence","Promise","resolve","hashAlgorithm","ocspResponses","crlRefs","ocspRefs","then","promises","i","crls","length","push","CrlValidatedID","crl","all","error","reject","OcspResponsesID","ocspResponse","completeRevocationRefs","CrlOcspRef","crlids","CRLListID","ocspids","OcspListID","makeAttribute","Attribute","type","values","toSchema"],"mappings":"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","file":"CompleteRevocationReferences.js","sourcesContent":["import { Attribute } from \"pkijs\";\r\nimport CompleteRevocationRefs from \"./CompleteRevocationRefs.js\";\r\nimport CrlValidatedID from \"./CrlValidatedID.js\";\r\nimport OcspResponsesID from \"./OcspResponsesID.js\";\r\nimport CrlOcspRef from \"./CrlOcspRef.js\";\r\nimport CRLListID from \"./CRLListID.js\";\r\nimport OcspListID from \"./OcspListID.js\";\r\n//**************************************************************************************\r\n// noinspection JSUnusedGlobalSymbols\r\nexport default class CompleteRevocationReferences extends CompleteRevocationRefs\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for CompleteRevocationReferences class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Creates \"complete-revocation-references\" for given CMS Signed Data and signer index\r\n\t * @param {SignedData} cmsSigned CMS Signed Data to make attribute for\r\n\t * @param {number} signerIndex Index of signer to make attribute for\r\n\t * @param {Object} parameters Additional parameters for making attribute\r\n\t * @returns {Promise}\r\n\t */\r\n\tfillValues(cmsSigned, signerIndex, parameters)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tconst _this = this;\r\n\t\tlet sequence = Promise.resolve();\r\n\t\t\r\n\t\tlet hashAlgorithm = \"SHA-1\";\r\n\t\tlet ocspResponses = []; // Array of OCSP Responses\r\n\t\t\r\n\t\tconst crlRefs = []; // CrlValidatedID;\r\n\t\tconst ocspRefs = []; // OcspResponsesID\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check input parameters\r\n\t\tif(\"hashAlgorithm\" in parameters)\r\n\t\t\thashAlgorithm = parameters.hashAlgorithm;\r\n\t\t\r\n\t\tif(\"ocspResponses\" in parameters)\r\n\t\t\tocspResponses = parameters.ocspResponses;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Append references for all CRLs\r\n\t\tif(\"crls\" in cmsSigned)\r\n\t\t{\r\n\t\t\tsequence = sequence.then(\r\n\t\t\t\t() => {\r\n\t\t\t\t\tconst promises = [];\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor(let i = 0; i < cmsSigned.crls.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcrlRefs.push(new CrlValidatedID());\r\n\t\t\t\t\t\tpromises.push(crlRefs[crlRefs.length - 1].fillValues({\r\n\t\t\t\t\t\t\thashAlgorithm,\r\n\t\t\t\t\t\t\tcrl: cmsSigned.crls[i]\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn Promise.all(promises);\r\n\t\t\t\t},\r\n\t\t\t\terror => Promise.reject(error)\r\n\t\t\t);\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Append references for all OCSPs\r\n\t\tif(ocspResponses.length)\r\n\t\t{\r\n\t\t\tsequence = sequence.then(\r\n\t\t\t\t() => {\r\n\t\t\t\t\tconst promises = [];\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor(let i = 0; i < ocspResponses.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tocspRefs.push(new OcspResponsesID());\r\n\t\t\t\t\t\tpromises.push(ocspRefs[ocspRefs.length - 1].fillValues({\r\n\t\t\t\t\t\t\thashAlgorithm,\r\n\t\t\t\t\t\t\tocspResponse: ocspResponses[i]\r\n\t\t\t\t\t\t}));\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn Promise.all(promises);\r\n\t\t\t\t},\r\n\t\t\t\terror => Promise.reject(error)\r\n\t\t\t);\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Push all values \"in place\"\r\n\t\treturn sequence.then(\r\n\t\t\t() => {\r\n\t\t\t\tif(crlRefs.length || ocspRefs.length)\r\n\t\t\t\t{\r\n\t\t\t\t\t_this.completeRevocationRefs.push(new CrlOcspRef());\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(crlRefs.length)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t_this.completeRevocationRefs[_this.completeRevocationRefs.length - 1].crlids = new CRLListID({\r\n\t\t\t\t\t\t\tcrls: crlRefs\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(ocspRefs.length)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t_this.completeRevocationRefs[_this.completeRevocationRefs.length - 1].ocspids = new OcspListID({\r\n\t\t\t\t\t\t\tocspResponses: ocspRefs\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\terror => Promise.reject(error)\r\n\t\t);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Create \"complete-revocation-references\" CAdES attribute\r\n\t * @param {Object} [parameters] Additional parameters for making attribute\r\n\t * @returns {Attribute}\r\n\t */\r\n\tmakeAttribute(parameters = {})\r\n\t{\r\n\t\t//region Create and return attribute\r\n\t\treturn new Attribute({\r\n\t\t\ttype: \"1.2.840.113549.1.9.16.2.22\",\r\n\t\t\tvalues: [\r\n\t\t\t\tthis.toSchema()\r\n\t\t\t]\r\n\t\t});\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}
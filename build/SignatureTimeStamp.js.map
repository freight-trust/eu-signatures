{"version":3,"sources":["../src/SignatureTimeStamp.js"],"names":["asn1js","SignatureTimeStamp","ContentInfo","constructor","parameters","tspResponse","defaultValues","tstInfo","fromSchema","schema","contentType","Error","cmsSigned","SignedData","content","encapContentInfo","eContentType","eContent","OctetString","asn1","fromBER","valueBlock","valueHex","TSTInfo","result","getStampingBuffer","cmsSignedData","signerIndex","hashAlgorithm","crypto","Promise","reject","resolve","then","digest","name","signerInfos","signature","error","makeAttribute","TimeStampResp","timeStampToken","toSchema","Attribute","type","values"],"mappings":"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","file":"SignatureTimeStamp.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue } from \"pvutils\";\r\nimport { getCrypto, ContentInfo, TSTInfo, SignedData, Attribute, TimeStampResp } from \"pkijs\";\r\n//**************************************************************************************\r\n// noinspection JSUnusedGlobalSymbols\r\nexport default class SignatureTimeStamp extends ContentInfo\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for SignatureTimeStamp class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\t\t\r\n\t\t//region Internal properties of the object\r\n\t\tif(\"tspResponse\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {ArrayBuffer}\r\n\t\t\t * @description tspResponse\r\n\t\t\t */\r\n\t\t\tthis.tspResponse = getParametersValue(parameters, \"tspResponse\", SignatureTimeStamp.defaultValues(\"tspResponse\"));\r\n\r\n\t\tif(\"tstInfo\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {TSTInfo}\r\n\t\t\t * @description tstInfo\r\n\t\t\t */\r\n\t\t\tthis.tstInfo = getParametersValue(parameters, \"tstInfo\", SignatureTimeStamp.defaultValues(\"tstInfo\"));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\tsuper.fromSchema(schema);\r\n\t\t\r\n\t\t//region Check \"contentType\"\r\n\t\tif(this.contentType !== \"1.2.840.113549.1.7.2\") // signedData\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for SignatureTimeStamp\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get internal \"CMS_SIGNED_DATA\"\r\n\t\tconst cmsSigned = new SignedData({ schema: this.content });\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get internal TST_INFO\r\n\t\tif(cmsSigned.encapContentInfo.eContentType !== \"1.2.840.113549.1.9.16.1.4\")\r\n\t\t\tthrow new Error(\"Incorrect format for SignatureTimeStamp\");\r\n\t\t\r\n\t\tif((\"eContent\" in cmsSigned.encapContentInfo) === false)\r\n\t\t\tthrow new Error(\"Incorrect format for SignatureTimeStamp\");\r\n\t\t\r\n\t\tif((cmsSigned.encapContentInfo.eContent instanceof asn1js.OctetString) === false)\r\n\t\t\tthrow new Error(\"Incorrect format for SignatureTimeStamp\");\r\n\t\t\r\n\t\tconst asn1 = asn1js.fromBER(cmsSigned.encapContentInfo.eContent.valueBlock.valueHex);\r\n\t\tthis.tstInfo = new TSTInfo({ schema: asn1.result });\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Get \"ArrayBuffer\" to transfer to time-stamp server\r\n\t * @param {SignedData} cmsSignedData CMS Signed Data to make attribute for\r\n\t * @param {number} signerIndex Index of signer to make attribute for\r\n\t * @param {Object} parameters Additional parameters for making attribute\r\n\t * @returns {Promise}\r\n\t */\r\n\tgetStampingBuffer(cmsSignedData, signerIndex, parameters)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tlet hashAlgorithm = \"SHA-256\";\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get a \"crypto\" extension\r\n\t\tconst crypto = getCrypto();\r\n\t\tif(typeof crypto === \"undefined\")\r\n\t\t\treturn Promise.reject(\"Unable to create WebCrypto object\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check input parameters\r\n\t\tif(\"hashAlgorithm\" in parameters)\r\n\t\t\thashAlgorithm = parameters.hashAlgorithm;\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn Promise.resolve().then(\r\n\t\t\t() => crypto.digest({ name: hashAlgorithm }, cmsSignedData.signerInfos[signerIndex].signature.valueBlock.valueHex),\r\n\t\t\terror => Promise.reject(error)\r\n\t\t);\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Create \"signature-time-stamp\" CAdES attribute\r\n\t * @param {Object} [parameters] Additional parameters for making attribute\r\n\t * @returns {Attribute}\r\n\t */\r\n\tmakeAttribute(parameters = {})\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tlet tspResponse;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check input parameters\r\n\t\tif(\"tspResponse\" in parameters)\r\n\t\t\ttspResponse = parameters.tspResponse;\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(\"tspResponse\" in this)\r\n\t\t\t\ttspResponse = this.tspResponse;\r\n\t\t\telse\r\n\t\t\t\tthrow new Error(\"Parameter \\\"tspResponse\\\" is mandatory for making \\\"signature-time-stamp\\\" attribute\");\r\n\t\t}\r\n\t\t\r\n\t\tthis.tspResponse = tspResponse;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Change type of \"tspResponse\"\r\n\t\tconst asn1 = asn1js.fromBER(tspResponse);\r\n\t\ttspResponse = new TimeStampResp({ schema: asn1.result });\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initialize internal variables from \"tspResponse\"\r\n\t\tif(\"timeStampToken\" in tspResponse)\r\n\t\t\tthis.fromSchema(tspResponse.timeStampToken.toSchema());\r\n\t\telse\r\n\t\t\tthrow new Error(\"No neccessary \\\"timeStampToken\\\" inside \\\"tspResponse\\\"\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Create and return attribute\r\n\t\treturn new Attribute({\r\n\t\t\ttype: \"1.2.840.113549.1.9.16.2.14\",\r\n\t\t\tvalues: [\r\n\t\t\t\tthis.toSchema()\r\n\t\t\t]\r\n\t\t});\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}
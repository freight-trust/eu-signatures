{"version":3,"sources":["../src/RevocationInfoArchival.js"],"names":["asn1js","RevocationInfoArchival","constructor","parameters","crl","defaultValues","ocsp","otherRevInfo","fromSchema","schema","memberName","Error","compareWithDefault","memberValue","length","names","Sequence","name","blockName","value","Constructed","optional","idBlock","tagClass","tagNumber","Repeated","CertificateRevocationList","OCSPResponse","OtherRevVals","asn1","compareSchema","verified","result","Array","from","element","toSchema","outputArray","push","toJSON","_object"],"mappings":";;;;;;AAAA;;IAAYA,M;;AACZ;;AACA;;AACA;;;;;;;;AACA;AACA;AACe,MAAMC,sBAAN,CACf;AACC;AACA;;;;;AAKAC,aAAYC,aAAa,EAAzB,EACA;AACC;AACA,MAAG,SAASA,UAAZ;AACC;;;;AAIA,QAAKC,GAAL,GAAW,iCAAmBD,UAAnB,EAA+B,KAA/B,EAAsCF,uBAAuBI,aAAvB,CAAqC,KAArC,CAAtC,CAAX;;AAED,MAAG,UAAUF,UAAb;AACC;;;;AAIA,QAAKG,IAAL,GAAY,iCAAmBH,UAAnB,EAA+B,MAA/B,EAAuCF,uBAAuBI,aAAvB,CAAqC,MAArC,CAAvC,CAAZ;;AAED,MAAG,kBAAkBF,UAArB;AACC;;;;AAIA,QAAKI,YAAL,GAAoB,iCAAmBJ,UAAnB,EAA+B,cAA/B,EAA+CF,uBAAuBI,aAAvB,CAAqC,cAArC,CAA/C,CAApB;AACD;;AAEA;AACA,MAAG,YAAYF,UAAf,EACC,KAAKK,UAAL,CAAgBL,WAAWM,MAA3B;AACD;AACA;AACD;AACA;;;;AAIA,QAAOJ,aAAP,CAAqBK,UAArB,EACA;AACC,UAAOA,UAAP;AAEC,QAAK,KAAL;AACA,QAAK,MAAL;AACA,QAAK,cAAL;AACC,WAAO,EAAP;AACD;AACC,UAAM,IAAIC,KAAJ,CAAW,yDAAwDD,UAAW,EAA9E,CAAN;AAPF;AASA;AACD;AACA;;;;;AAKA,QAAOE,kBAAP,CAA0BF,UAA1B,EAAsCG,WAAtC,EACA;AACC,UAAOH,UAAP;AAEC,QAAK,KAAL;AACA,QAAK,MAAL;AACA,QAAK,cAAL;AACC,WAAQG,YAAYC,MAAZ,KAAuB,CAA/B;AACD;AACC,UAAM,IAAIH,KAAJ,CAAW,yDAAwDD,UAAW,EAA9E,CAAN;AAPF;AASA;AACD;AACA;;;;;AAKA,QAAOD,MAAP,CAAcN,aAAa,EAA3B,EACA;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AAOA,QAAMY,QAAQ,iCAAmBZ,UAAnB,EAA+B,OAA/B,EAAwC,EAAxC,CAAd;;AAEA,SAAQ,IAAIH,OAAOgB,QAAX,CAAoB;AAC3BC,SAAOF,MAAMG,SAAN,IAAmB,EADC;AAE3BC,UAAO,CACN,IAAInB,OAAOoB,WAAX,CAAuB;AACtBC,cAAU,IADY;AAEtBC,aAAS;AACRC,eAAU,CADF,EACK;AACbC,gBAAW,CAFH,CAEK;AAFL,KAFa;AAMtBL,WAAO,CACN,IAAInB,OAAOgB,QAAX,CAAoB;AACnBG,YAAO,CACN,IAAInB,OAAOyB,QAAX,CAAoB;AACnBR,YAAOF,MAAMX,GAAN,IAAa,EADD;AAEnBe,aAAOO,iCAA0BjB,MAA1B;AAFY,MAApB,CADM;AADY,KAApB,CADM;AANe,IAAvB,CADM,EAkBN,IAAIT,OAAOoB,WAAX,CAAuB;AACtBC,cAAU,IADY;AAEtBC,aAAS;AACRC,eAAU,CADF,EACK;AACbC,gBAAW,CAFH,CAEK;AAFL,KAFa;AAMtBL,WAAO,CACN,IAAInB,OAAOgB,QAAX,CAAoB;AACnBG,YAAO,CACN,IAAInB,OAAOyB,QAAX,CAAoB;AACnBR,YAAOF,MAAMT,IAAN,IAAc,EADF;AAEnBa,aAAOQ,oBAAalB,MAAb;AAFY,MAApB,CADM;AADY,KAApB,CADM;AANe,IAAvB,CAlBM,EAmCN,IAAIT,OAAOoB,WAAX,CAAuB;AACtBC,cAAU,IADY;AAEtBC,aAAS;AACRC,eAAU,CADF,EACK;AACbC,gBAAW,CAFH,CAEK;AAFL,KAFa;AAMtBL,WAAO,CACNS,uBAAanB,MAAb,CAAoB;AACnBQ,WAAOF,MAAMR,YAAN,IAAsB;AAC5BQ,aAAO;AACNG,kBAAW;AADL;AADqB;AADV,KAApB,CADM;AANe,IAAvB,CAnCM;AAFoB,GAApB,CAAR;AAuDA;AACD;AACA;;;;AAIAV,YAAWC,MAAX,EACA;AACC;AACA,QAAMoB,OAAO7B,OAAO8B,aAAP,CAAqBrB,MAArB,EACZA,MADY,EAEZR,uBAAuBQ,MAAvB,CAA8B;AAC7BM,UAAO;AACNX,SAAK,KADC;AAENE,UAAM,MAFA;AAGNC,kBAAc;AACbQ,YAAO;AACNG,iBAAW;AADL;AADM;AAHR;AADsB,GAA9B,CAFY,CAAb;;AAeA,MAAGW,KAAKE,QAAL,KAAkB,KAArB,EACC,MAAM,IAAIpB,KAAJ,CAAU,gFAAV,CAAN;AACD;;AAEA;AACA,MAAG,SAASkB,KAAKG,MAAjB,EACC,KAAK5B,GAAL,GAAW6B,MAAMC,IAAN,CAAWL,KAAKG,MAAL,CAAY5B,GAAvB,EAA4B+B,WAAW,IAAIT,gCAAJ,CAA8B,EAAEjB,QAAQ0B,OAAV,EAA9B,CAAvC,CAAX;;AAED,MAAG,UAAUN,KAAKG,MAAlB,EACC,KAAK1B,IAAL,GAAY2B,MAAMC,IAAN,CAAWL,KAAKG,MAAL,CAAY1B,IAAvB,EAA6B6B,WAAW,IAAIR,mBAAJ,CAAiB,EAAElB,QAAQ0B,OAAV,EAAjB,CAAxC,CAAZ;;AAED,MAAG,kBAAkBN,KAAKG,MAA1B,EACC,KAAKzB,YAAL,GAAoB,IAAIqB,sBAAJ,CAAiB,EAAEnB,QAAQoB,KAAKG,MAAL,CAAYzB,YAAtB,EAAjB,CAApB;AACD;AACA;AACD;AACA;;;;AAIA6B,YACA;AACC;AACA,QAAMC,cAAc,EAApB;;AAEA,MAAG,SAAS,IAAZ,EACA;AACCA,eAAYC,IAAZ,CAAiB,IAAItC,OAAOoB,WAAX,CAAuB;AACvCE,aAAS;AACRC,eAAU,CADF,EACK;AACbC,gBAAW,CAFH,CAEK;AAFL,KAD8B;AAKvCL,WAAO,CACN,IAAInB,OAAOgB,QAAX,CAAoB;AACnBG,YAAOc,MAAMC,IAAN,CAAW,KAAK9B,GAAhB,EAAqB+B,WAAWA,QAAQC,QAAR,EAAhC;AADY,KAApB,CADM;AALgC,IAAvB,CAAjB;AAWA;;AAED,MAAG,UAAU,IAAb,EACA;AACCC,eAAYC,IAAZ,CAAiB,IAAItC,OAAOoB,WAAX,CAAuB;AACvCE,aAAS;AACRC,eAAU,CADF,EACK;AACbC,gBAAW,CAFH,CAEK;AAFL,KAD8B;AAKvCL,WAAO,CACN,IAAInB,OAAOgB,QAAX,CAAoB;AACnBG,YAAOc,MAAMC,IAAN,CAAW,KAAK5B,IAAhB,EAAsB6B,WAAWA,QAAQC,QAAR,EAAjC;AADY,KAApB,CADM;AALgC,IAAvB,CAAjB;AAWA;;AAED,MAAG,kBAAkB,IAArB,EACA;AACCC,eAAYC,IAAZ,CAAiB,IAAItC,OAAOoB,WAAX,CAAuB;AACvCE,aAAS;AACRC,eAAU,CADF,EACK;AACbC,gBAAW,CAFH,CAEK;AAFL,KAD8B;AAKvCL,WAAO,CAAC,KAAKZ,YAAL,CAAkB6B,QAAlB,EAAD;AALgC,IAAvB,CAAjB;AAOA;AACD;;AAEA;AACA,SAAQ,IAAIpC,OAAOgB,QAAX,CAAoB;AAC3BG,UAAOkB;AADoB,GAApB,CAAR;AAGA;AACA;AACD;AACA;;;;AAIAE,UACA;AACC,QAAMC,UAAU,EAAhB;;AAEA,MAAG,SAAS,IAAZ,EACCA,QAAQpC,GAAR,GAAc6B,MAAMC,IAAN,CAAW,KAAK9B,GAAhB,EAAqB+B,WAAWA,QAAQI,MAAR,EAAhC,CAAd;;AAED,MAAG,UAAU,IAAb,EACCC,QAAQlC,IAAR,GAAe2B,MAAMC,IAAN,CAAW,KAAK5B,IAAhB,EAAsB6B,WAAWA,QAAQI,MAAR,EAAjC,CAAf;;AAED,MAAG,kBAAkB,IAArB,EACCC,QAAQjC,YAAR,GAAuB,KAAKA,YAAL,CAAkBgC,MAAlB,EAAvB;;AAED,SAAOC,OAAP;AACA;AACD;AA/QD;kBADqBvC,sB,EAkRrB","file":"RevocationInfoArchival.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue } from \"pvutils\";\r\nimport { CertificateRevocationList, OCSPResponse } from \"pkijs\";\r\nimport OtherRevVals from \"./OtherRevVals.js\";\r\n//**************************************************************************************\r\n// noinspection JSUnusedGlobalSymbols\r\nexport default class RevocationInfoArchival\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for RevocationInfoArchival class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\tif(\"crl\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<CertificateRevocationList>}\r\n\t\t\t * @description crl\r\n\t\t\t */\r\n\t\t\tthis.crl = getParametersValue(parameters, \"crl\", RevocationInfoArchival.defaultValues(\"crl\"));\r\n\t\t\r\n\t\tif(\"ocsp\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<OCSPResponse>}\r\n\t\t\t * @description ocsp\r\n\t\t\t */\r\n\t\t\tthis.ocsp = getParametersValue(parameters, \"ocsp\", RevocationInfoArchival.defaultValues(\"ocsp\"));\r\n\t\t\r\n\t\tif(\"otherRevInfo\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<otherRevInfo>}\r\n\t\t\t * @description otherRevInfo\r\n\t\t\t */\r\n\t\t\tthis.otherRevInfo = getParametersValue(parameters, \"otherRevInfo\", RevocationInfoArchival.defaultValues(\"otherRevInfo\"));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"crl\":\r\n\t\t\tcase \"ocsp\":\r\n\t\t\tcase \"otherRevInfo\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RevocationInfoArchival class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"crl\":\r\n\t\t\tcase \"ocsp\":\r\n\t\t\tcase \"otherRevInfo\":\r\n\t\t\t\treturn (memberValue.length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RevocationInfoArchival class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//RevocationInfoArchival ::= SEQUENCE {\r\n\t\t//    crl [0] EXPLICIT SEQUENCE of CRLs, OPTIONAL\r\n\t\t//    ocsp [1] EXPLICIT SEQUENCE of OCSP Responses, OPTIONAL\r\n\t\t//    otherRevInfo [2] EXPLICIT SEQUENCE of OtherRevInfo, OPTIONAL\r\n\t\t//}\r\n\t\t//OtherRevInfo ::= SEQUENCE {\r\n\t\t//    Type OBJECT IDENTIFIER\r\n\t\t//    Value OCTET STRING\r\n\t\t//}\r\n\t\t\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [crl]\r\n\t\t * @property {string} [ocsp]\r\n\t\t * @property {string} [otherRevInfo]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Sequence({\r\n\t\t\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\t\t\tname: (names.crl || \"\"),\r\n\t\t\t\t\t\t\t\t\tvalue: CertificateRevocationList.schema()\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Sequence({\r\n\t\t\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\t\t\tname: (names.ocsp || \"\"),\r\n\t\t\t\t\t\t\t\t\tvalue: OCSPResponse.schema()\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tOtherRevVals.schema({\r\n\t\t\t\t\t\t\tname: (names.otherRevInfo || {\r\n\t\t\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\t\t\tblockName: \"otherRevInfo\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tRevocationInfoArchival.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tcrl: \"crl\",\r\n\t\t\t\t\tocsp: \"ocsp\",\r\n\t\t\t\t\totherRevInfo: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"otherRevInfo\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t\t\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for RevocationInfoArchival\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"crl\" in asn1.result)\r\n\t\t\tthis.crl = Array.from(asn1.result.crl, element => new CertificateRevocationList({ schema: element }));\r\n\t\t\r\n\t\tif(\"ocsp\" in asn1.result)\r\n\t\t\tthis.ocsp = Array.from(asn1.result.ocsp, element => new OCSPResponse({ schema: element }));\r\n\t\t\r\n\t\tif(\"otherRevInfo\" in asn1.result)\r\n\t\t\tthis.otherRevInfo = new OtherRevVals({ schema: asn1.result.otherRevInfo });\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(\"crl\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [\r\n\t\t\t\t\tnew asn1js.Sequence({\r\n\t\t\t\t\t\tvalue: Array.from(this.crl, element => element.toSchema())\r\n\t\t\t\t\t})\r\n\t\t\t\t]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(\"ocsp\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [\r\n\t\t\t\t\tnew asn1js.Sequence({\r\n\t\t\t\t\t\tvalue: Array.from(this.ocsp, element => element.toSchema())\r\n\t\t\t\t\t})\r\n\t\t\t\t]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(\"otherRevInfo\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.otherRevInfo.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {};\r\n\t\t\r\n\t\tif(\"crl\" in this)\r\n\t\t\t_object.crl = Array.from(this.crl, element => element.toJSON());\r\n\t\t\r\n\t\tif(\"ocsp\" in this)\r\n\t\t\t_object.ocsp = Array.from(this.ocsp, element => element.toJSON());\r\n\t\t\r\n\t\tif(\"otherRevInfo\" in this)\r\n\t\t\t_object.otherRevInfo = this.otherRevInfo.toJSON();\r\n\t\t\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}
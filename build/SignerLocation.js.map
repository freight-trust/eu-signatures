{"version":3,"sources":["../src/SignerLocation.js"],"names":["asn1js","SignerLocation","constructor","parameters","countryName","defaultValues","localityName","postalAdddress","fromSchema","schema","memberName","DirectoryString","Error","compareWithDefault","memberValue","type","value","length","names","Sequence","name","blockName","Constructed","optional","idBlock","tagClass","tagNumber","Choice","TeletexString","PrintableString","UniversalString","Utf8String","BmpString","Repeated","asn1","compareSchema","verified","result","Array","from","element","toSchema","outputArray","push","toJSON","_object"],"mappings":";;;;;;AAAA;;IAAYA,M;;AACZ;;AACA;;;;;;;;AACA;AACA;AACe,MAAMC,cAAN,CACf;AACC;AACA;;;;;AAKAC,aAAYC,aAAa,EAAzB,EACA;AACC;AACA,MAAG,iBAAiBA,UAApB;AACC;;;;AAIA,QAAKC,WAAL,GAAmB,iCAAmBD,UAAnB,EAA+B,aAA/B,EAA8CF,eAAeI,aAAf,CAA6B,aAA7B,CAA9C,CAAnB;;AAED,MAAG,kBAAkBF,UAArB;AACC;;;;AAIA,QAAKG,YAAL,GAAoB,iCAAmBH,UAAnB,EAA+B,cAA/B,EAA+CF,eAAeI,aAAf,CAA6B,cAA7B,CAA/C,CAApB;;AAED,MAAG,oBAAoBF,UAAvB;AACC;;;;AAIA,QAAKI,cAAL,GAAsB,iCAAmBJ,UAAnB,EAA+B,gBAA/B,EAAiDF,eAAeI,aAAf,CAA6B,gBAA7B,CAAjD,CAAtB;AACD;;AAEA;AACA,MAAG,YAAYF,UAAf,EACC,KAAKK,UAAL,CAAgBL,WAAWM,MAA3B;AACD;AACA;AACD;AACA;;;;AAIA,QAAOJ,aAAP,CAAqBK,UAArB,EACA;AACC,UAAOA,UAAP;AAEC,QAAK,aAAL;AACA,QAAK,cAAL;AACC,WAAO,IAAIC,yBAAJ,EAAP;AACD,QAAK,gBAAL;AACC,WAAO,EAAP;AACD;AACC,UAAM,IAAIC,KAAJ,CAAW,iDAAgDF,UAAW,EAAtE,CAAN;AARF;AAUA;AACD;AACA;;;;;AAKA,QAAOG,kBAAP,CAA0BH,UAA1B,EAAsCI,WAAtC,EACA;AACC,UAAOJ,UAAP;AAEC,QAAK,aAAL;AACA,QAAK,cAAL;AACC,WAASC,0BAAgBE,kBAAhB,CAAmC,MAAnC,EAA2CC,YAAYC,IAAvD,CAAD,IACNJ,0BAAgBE,kBAAhB,CAAmC,OAAnC,EAA4CC,YAAYE,KAAxD,CADF;AAED,QAAK,gBAAL;AACC,WAAQF,YAAYG,MAAZ,KAAuB,CAA/B;AACD;AACC,UAAM,IAAIL,KAAJ,CAAW,iDAAgDF,UAAW,EAAtE,CAAN;AATF;AAWA;AACD;AACA;;;;;AAKA,QAAOD,MAAP,CAAcN,aAAa,EAA3B,EACA;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AAOA,QAAMe,QAAQ,iCAAmBf,UAAnB,EAA+B,OAA/B,EAAwC,EAAxC,CAAd;;AAEA,SAAQ,IAAIH,OAAOmB,QAAX,CAAoB;AAC3BC,SAAOF,MAAMG,SAAN,IAAmB,EADC;AAE3BL,UAAO,CACN,IAAIhB,OAAOsB,WAAX,CAAuB;AACtBC,cAAU,IADY;AAEtBC,aAAS;AACRC,eAAU,CADF,EACK;AACbC,gBAAW,CAFH,CAEK;AAFL,KAFa;AAMtBV,WAAO,CACN,IAAIhB,OAAO2B,MAAX,CAAkB;AACjBX,YAAO,CACN,IAAIhB,OAAO4B,aAAX,CAAyB,EAAER,MAAOF,MAAMd,WAAN,IAAqB,EAA9B,EAAzB,CADM,EAEN,IAAIJ,OAAO6B,eAAX,CAA2B,EAAET,MAAOF,MAAMd,WAAN,IAAqB,EAA9B,EAA3B,CAFM,EAGN,IAAIJ,OAAO8B,eAAX,CAA2B,EAAEV,MAAOF,MAAMd,WAAN,IAAqB,EAA9B,EAA3B,CAHM,EAIN,IAAIJ,OAAO+B,UAAX,CAAsB,EAAEX,MAAOF,MAAMd,WAAN,IAAqB,EAA9B,EAAtB,CAJM,EAKN,IAAIJ,OAAOgC,SAAX,CAAqB,EAAEZ,MAAOF,MAAMd,WAAN,IAAqB,EAA9B,EAArB,CALM;AADU,KAAlB,CADM;AANe,IAAvB,CADM,EAmBN,IAAIJ,OAAOsB,WAAX,CAAuB;AACtBF,UAAOF,MAAMZ,YAAN,IAAsB,EADP;AAEtBiB,cAAU,IAFY;AAGtBC,aAAS;AACRC,eAAU,CADF,EACK;AACbC,gBAAW,CAFH,CAEK;AAFL,KAHa;AAOtBV,WAAO,CACN,IAAIhB,OAAO2B,MAAX,CAAkB;AACjBX,YAAO,CACN,IAAIhB,OAAO4B,aAAX,CAAyB,EAAER,MAAOF,MAAMZ,YAAN,IAAsB,EAA/B,EAAzB,CADM,EAEN,IAAIN,OAAO6B,eAAX,CAA2B,EAAET,MAAOF,MAAMZ,YAAN,IAAsB,EAA/B,EAA3B,CAFM,EAGN,IAAIN,OAAO8B,eAAX,CAA2B,EAAEV,MAAOF,MAAMZ,YAAN,IAAsB,EAA/B,EAA3B,CAHM,EAIN,IAAIN,OAAO+B,UAAX,CAAsB,EAAEX,MAAOF,MAAMZ,YAAN,IAAsB,EAA/B,EAAtB,CAJM,EAKN,IAAIN,OAAOgC,SAAX,CAAqB,EAAEZ,MAAOF,MAAMZ,YAAN,IAAsB,EAA/B,EAArB,CALM;AADU,KAAlB,CADM;AAPe,IAAvB,CAnBM,EAsCN,IAAIN,OAAOsB,WAAX,CAAuB;AACtBC,cAAU,IADY;AAEtBC,aAAS;AACRC,eAAU,CADF,EACK;AACbC,gBAAW,CAFH,CAEK;AAFL,KAFa;AAMtBV,WAAO,CACN,IAAIhB,OAAOiC,QAAX,CAAoB;AACnBb,WAAOF,MAAMX,cAAN,IAAwB,EADZ;AAEnBS,YAAO,IAAIhB,OAAO2B,MAAX,CAAkB;AACxBX,aAAO,CACN,IAAIhB,OAAO4B,aAAX,EADM,EAEN,IAAI5B,OAAO6B,eAAX,EAFM,EAGN,IAAI7B,OAAO8B,eAAX,EAHM,EAIN,IAAI9B,OAAO+B,UAAX,EAJM,EAKN,IAAI/B,OAAOgC,SAAX,EALM;AADiB,MAAlB;AAFY,KAApB,CADM;AANe,IAAvB,CAtCM;AAFoB,GAApB,CAAR;AA+DA;AACD;AACA;;;;AAIAxB,YAAWC,MAAX,EACA;AACC;AACA,QAAMyB,OAAOlC,OAAOmC,aAAP,CAAqB1B,MAArB,EACZA,MADY,EAEZR,eAAeQ,MAAf,CAAsB;AACrBS,UAAO;AACNd,iBAAa,aADP;AAENE,kBAAc,cAFR;AAGNC,oBAAgB;AAHV;AADc,GAAtB,CAFY,CAAb;;AAWA,MAAG2B,KAAKE,QAAL,KAAkB,KAArB,EACC,MAAM,IAAIxB,KAAJ,CAAU,wEAAV,CAAN;AACD;;AAEA;AACA,MAAG,iBAAiBsB,KAAKG,MAAzB,EACC,KAAKjC,WAAL,GAAmB,IAAIO,yBAAJ,CAAoB,EAAEF,QAAQyB,KAAKG,MAAL,CAAYjC,WAAtB,EAApB,CAAnB;;AAED,MAAG,kBAAkB8B,KAAKG,MAA1B,EACC,KAAK/B,YAAL,GAAoB,IAAIK,yBAAJ,CAAoB,EAAEF,QAAQyB,KAAKG,MAAL,CAAY/B,YAAtB,EAApB,CAApB;;AAED,MAAG,oBAAoB4B,KAAKG,MAA5B,EACC,KAAK9B,cAAL,GAAsB+B,MAAMC,IAAN,CAAWL,KAAKG,MAAL,CAAY9B,cAAvB,EAAuCiC,WAAW,IAAI7B,yBAAJ,CAAoB,EAAEF,QAAQ+B,OAAV,EAApB,CAAlD,CAAtB;AACD;AACA;AACD;AACA;;;;AAIAC,YACA;AACC;AACA,QAAMC,cAAc,EAApB;;AAEA,MAAG,iBAAiB,IAApB,EACA;AACCA,eAAYC,IAAZ,CAAiB,IAAI3C,OAAOsB,WAAX,CAAuB;AACvCE,aAAS;AACRC,eAAU,CADF,EACK;AACbC,gBAAW,CAFH,CAEK;AAFL,KAD8B;AAKvCV,WAAO,CACN,KAAKZ,WAAL,CAAiBqC,QAAjB,EADM;AALgC,IAAvB,CAAjB;AASA;;AAED,MAAG,kBAAkB,IAArB,EACA;AACCC,eAAYC,IAAZ,CAAiB,IAAI3C,OAAOsB,WAAX,CAAuB;AACvCE,aAAS;AACRC,eAAU,CADF,EACK;AACbC,gBAAW,CAFH,CAEK;AAFL,KAD8B;AAKvCV,WAAO,CACN,KAAKV,YAAL,CAAkBmC,QAAlB,EADM;AALgC,IAAvB,CAAjB;AASA;;AAED,MAAG,oBAAoB,IAAvB,EACA;AACCC,eAAYC,IAAZ,CAAiB,IAAI3C,OAAOsB,WAAX,CAAuB;AACvCE,aAAS;AACRC,eAAU,CADF,EACK;AACbC,gBAAW,CAFH,CAEK;AAFL,KAD8B;AAKvCV,WAAOsB,MAAMC,IAAN,CAAW,KAAKhC,cAAhB,EAAgCiC,WAAWA,QAAQC,QAAR,EAA3C;AALgC,IAAvB,CAAjB;AAOA;AACD;;AAEA;AACA,SAAQ,IAAIzC,OAAOmB,QAAX,CAAoB;AAC3BH,UAAO0B;AADoB,GAApB,CAAR;AAGA;AACA;AACD;AACA;;;;AAIAE,UACA;AACC,QAAMC,UAAU,EAAhB;;AAEA,MAAG,iBAAiB,IAApB,EACCA,QAAQzC,WAAR,GAAsB,KAAKA,WAAL,CAAiBwC,MAAjB,EAAtB;;AAED,MAAG,kBAAkB,IAArB,EACCC,QAAQvC,YAAR,GAAuB,KAAKA,YAAL,CAAkBsC,MAAlB,EAAvB;;AAED,MAAG,oBAAoB,IAAvB,EACCC,QAAQtC,cAAR,GAAyB+B,MAAMC,IAAN,CAAW,KAAKhC,cAAhB,EAAgCiC,WAAWA,QAAQI,MAAR,EAA3C,CAAzB;;AAED,SAAOC,OAAP;AACA;AACD;AAjRD;kBADqB5C,c,EAoRrB","file":"SignerLocation.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue } from \"pvutils\";\r\nimport DirectoryString from \"./DirectoryString.js\";\r\n//**************************************************************************************\r\n// noinspection JSUnusedGlobalSymbols\r\nexport default class SignerLocation\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for SignerLocation class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\tif(\"countryName\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {DirectoryString}\r\n\t\t\t * @description countryName\r\n\t\t\t */\r\n\t\t\tthis.countryName = getParametersValue(parameters, \"countryName\", SignerLocation.defaultValues(\"countryName\"));\r\n\t\t\r\n\t\tif(\"localityName\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {DirectoryString}\r\n\t\t\t * @description localityName\r\n\t\t\t */\r\n\t\t\tthis.localityName = getParametersValue(parameters, \"localityName\", SignerLocation.defaultValues(\"localityName\"));\r\n\t\t\r\n\t\tif(\"postalAdddress\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<DirectoryString>}\r\n\t\t\t * @description postalAdddress\r\n\t\t\t */\r\n\t\t\tthis.postalAdddress = getParametersValue(parameters, \"postalAdddress\", SignerLocation.defaultValues(\"postalAdddress\"));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"countryName\":\r\n\t\t\tcase \"localityName\":\r\n\t\t\t\treturn new DirectoryString();\r\n\t\t\tcase \"postalAdddress\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for SignerLocation class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"countryName\":\r\n\t\t\tcase \"localityName\":\r\n\t\t\t\treturn ((DirectoryString.compareWithDefault(\"type\", memberValue.type)) &&\r\n\t\t\t\t\t\tDirectoryString.compareWithDefault(\"value\", memberValue.value));\r\n\t\t\tcase \"postalAdddress\":\r\n\t\t\t\treturn (memberValue.length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for SignerLocation class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t// PostalAddress ::= SEQUENCE SIZE(1..6) OF DirectoryString\r\n\t\t//\r\n\t\t// SignerLocation ::= SEQUENCE { -- at least one of the following shall be present:\r\n\t\t//    countryName [0] DirectoryString OPTIONAL,\r\n\t\t//    -- As used to name a Country in X.500\r\n\t\t//    localityName [1] DirectoryString OPTIONAL,\r\n\t\t//    -- As used to name a locality in X.500\r\n\t\t//    postalAdddress [2] PostalAddress OPTIONAL }\r\n\t\t\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [countryName]\r\n\t\t * @property {string} [localityName]\r\n\t\t * @property {string} [postalAdddress]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Choice({\r\n\t\t\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\t\t\tnew asn1js.TeletexString({ name: (names.countryName || \"\") }),\r\n\t\t\t\t\t\t\t\tnew asn1js.PrintableString({ name: (names.countryName || \"\") }),\r\n\t\t\t\t\t\t\t\tnew asn1js.UniversalString({ name: (names.countryName || \"\") }),\r\n\t\t\t\t\t\t\t\tnew asn1js.Utf8String({ name: (names.countryName || \"\") }),\r\n\t\t\t\t\t\t\t\tnew asn1js.BmpString({ name: (names.countryName || \"\") })\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.localityName || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Choice({\r\n\t\t\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\t\t\tnew asn1js.TeletexString({ name: (names.localityName || \"\") }),\r\n\t\t\t\t\t\t\t\tnew asn1js.PrintableString({ name: (names.localityName || \"\") }),\r\n\t\t\t\t\t\t\t\tnew asn1js.UniversalString({ name: (names.localityName || \"\") }),\r\n\t\t\t\t\t\t\t\tnew asn1js.Utf8String({ name: (names.localityName || \"\") }),\r\n\t\t\t\t\t\t\t\tnew asn1js.BmpString({ name: (names.localityName || \"\") })\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\tname: (names.postalAdddress || \"\"),\r\n\t\t\t\t\t\t\tvalue: new asn1js.Choice({\r\n\t\t\t\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\t\t\t\tnew asn1js.TeletexString(),\r\n\t\t\t\t\t\t\t\t\tnew asn1js.PrintableString(),\r\n\t\t\t\t\t\t\t\t\tnew asn1js.UniversalString(),\r\n\t\t\t\t\t\t\t\t\tnew asn1js.Utf8String(),\r\n\t\t\t\t\t\t\t\t\tnew asn1js.BmpString()\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tSignerLocation.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tcountryName: \"countryName\",\r\n\t\t\t\t\tlocalityName: \"localityName\",\r\n\t\t\t\t\tpostalAdddress: \"postalAdddress\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t\t\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for SignerLocation\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"countryName\" in asn1.result)\r\n\t\t\tthis.countryName = new DirectoryString({ schema: asn1.result.countryName });\r\n\t\t\r\n\t\tif(\"localityName\" in asn1.result)\r\n\t\t\tthis.localityName = new DirectoryString({ schema: asn1.result.localityName });\r\n\t\t\r\n\t\tif(\"postalAdddress\" in asn1.result)\r\n\t\t\tthis.postalAdddress = Array.from(asn1.result.postalAdddress, element => new DirectoryString({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(\"countryName\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [\r\n\t\t\t\t\tthis.countryName.toSchema()\r\n\t\t\t\t]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(\"localityName\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [\r\n\t\t\t\t\tthis.localityName.toSchema()\r\n\t\t\t\t]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(\"postalAdddress\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: Array.from(this.postalAdddress, element => element.toSchema())\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {};\r\n\t\t\r\n\t\tif(\"countryName\" in this)\r\n\t\t\t_object.countryName = this.countryName.toJSON();\r\n\t\t\r\n\t\tif(\"localityName\" in this)\r\n\t\t\t_object.localityName = this.localityName.toJSON();\r\n\t\t\r\n\t\tif(\"postalAdddress\" in this)\r\n\t\t\t_object.postalAdddress = Array.from(this.postalAdddress, element => element.toJSON());\r\n\t\t\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}
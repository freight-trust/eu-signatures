{"version":3,"sources":["../src/CrlOcspRef.js"],"names":["asn1js","CrlOcspRef","constructor","parameters","crlids","defaultValues","ocspids","otherRev","fromSchema","schema","memberName","CRLListID","OcspListID","OtherRevRefs","Error","compareWithDefault","memberValue","crls","ocspResponses","otherRevRefType","otherRevRefs","names","Sequence","name","blockName","optional","value","Constructed","idBlock","tagClass","tagNumber","asn1","compareSchema","verified","result","valueBlock","toSchema","outputArray","push","toJSON","_object"],"mappings":"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","file":"CrlOcspRef.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue } from \"pvutils\";\r\nimport CRLListID from \"./CRLListID.js\";\r\nimport OcspListID from \"./OcspListID.js\";\r\nimport OtherRevRefs from \"./OtherRevRefs.js\";\r\n//**************************************************************************************\r\nexport default class CrlOcspRef\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for CrlOcspRef class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\tif(\"crlids\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {CRLListID}\r\n\t\t\t * @description crlids\r\n\t\t\t */\r\n\t\t\tthis.crlids = getParametersValue(parameters, \"crlids\", CrlOcspRef.defaultValues(\"crlids\"));\r\n\t\t\r\n\t\tif(\"ocspids\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {OcspListID}\r\n\t\t\t * @description ocspids\r\n\t\t\t */\r\n\t\t\tthis.ocspids = getParametersValue(parameters, \"ocspids\", CrlOcspRef.defaultValues(\"ocspids\"));\r\n\t\t\r\n\t\tif(\"otherRev\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {OtherRevRefs}\r\n\t\t\t * @description otherRev\r\n\t\t\t */\r\n\t\t\tthis.otherRev = getParametersValue(parameters, \"otherRev\", CrlOcspRef.defaultValues(\"otherRev\"));\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"crlids\":\r\n\t\t\t\treturn new CRLListID();\r\n\t\t\tcase \"ocspids\":\r\n\t\t\t\treturn new OcspListID();\r\n\t\t\tcase \"otherRev\":\r\n\t\t\t\treturn new OtherRevRefs();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for CrlOcspRef class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"crlids\":\r\n\t\t\t\treturn (CRLListID.compareWithDefault(\"crls\", memberValue.crls));\r\n\t\t\tcase \"ocspids\":\r\n\t\t\t\treturn (OcspListID.compareWithDefault(\"ocspResponses\", memberValue.ocspResponses));\r\n\t\t\tcase \"otherRev\":\r\n\t\t\t\treturn ((OtherRevRefs.compareWithDefault(\"otherRevRefType\", memberValue.otherRevRefType)) &&\r\n\t\t\t\t\t\t(OtherRevRefs.compareWithDefault(\"otherRevRefs\", memberValue.otherRevRefs)));\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for CrlOcspRef class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//CrlOcspRef ::= SEQUENCE {\r\n\t\t//    crlids [0] CRLListID OPTIONAL,\r\n\t\t//    ocspids [1] OcspListID OPTIONAL,\r\n\t\t//    otherRev [2] OtherRevRefs OPTIONAL\r\n\t\t//}\r\n\t\t\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [type]\r\n\t\t * @property {string} [setName]\r\n\t\t * @property {string} [values]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\toptional: (names.optional || false),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.crlids || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [CRLListID.schema()]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.ocspids || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [OcspListID.schema({\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"ocspids.int\",\r\n\t\t\t\t\t\t\tocspResponses: \"ocspResponses\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.otherRev || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [OtherRevRefs.schema()]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tCrlOcspRef.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tcrlids: \"crlids\",\r\n\t\t\t\t\tocspids: \"ocspids\",\r\n\t\t\t\t\totherRev: \"otherRev\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t\t\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for CrlOcspRef\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"crlids\" in asn1.result)\r\n\t\t\tthis.crlids = new CRLListID({ schema: asn1.result.crlids.valueBlock.value[0] });\r\n\t\t\r\n\t\tif(\"ocspids\" in asn1.result)\r\n\t\t\tthis.ocspids = new OcspListID({ schema: asn1.result.ocspids.valueBlock.value[0] });\r\n\t\t\r\n\t\tif(\"otherRev\" in asn1.result)\r\n\t\t\tthis.otherRev = new OtherRevRefs({ schema: asn1.result.otherRev.valueBlock.value[0] });\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(\"crlids\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.crlids.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(\"ocspids\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.ocspids.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(\"otherRev\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.otherRev.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {};\r\n\t\t\r\n\t\tif(\"crlids\" in this)\r\n\t\t\t_object.crlids = this.crlids.toJSON();\r\n\t\t\r\n\t\tif(\"ocspids\" in this)\r\n\t\t\t_object.ocspids = this.ocspids.toJSON();\r\n\t\t\r\n\t\tif(\"otherRev\" in this)\r\n\t\t\t_object.otherRev = this.otherRev.toJSON();\r\n\t\t\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}
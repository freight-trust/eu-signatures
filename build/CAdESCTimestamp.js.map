{"version":3,"sources":["../src/CAdESCTimestamp.js"],"names":["asn1js","CAdESCTimestamp","ContentInfo","constructor","parameters","tspResponse","ArrayBuffer","getStampingBuffer","cmsSignedData","signerIndex","sequence","Promise","resolve","hashAlgorithm","resultBuffer","signatureTimeStamp","completeCertificateReferences","completeRevocationReferences","crypto","reject","then","signerInfos","signature","valueBlock","valueHex","makeAttribute","toSchema","toBER","error","digest","name","Error","asn1","fromBER","TimeStampResp","schema","result","fromSchema","timeStampToken","Attribute","type","values"],"mappings":"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","file":"CAdESCTimestamp.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, utilConcatBuf } from \"pvutils\";\r\nimport {\r\n\tgetCrypto,\r\n\tContentInfo,\r\n\tAttribute,\r\n\tTimeStampResp\r\n} from \"pkijs\";\r\n//**************************************************************************************\r\n// noinspection JSUnusedGlobalSymbols\r\nexport default class CAdESCTimestamp extends ContentInfo\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for CAdESCTimestamp class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\tsuper(parameters);\r\n\t\t\r\n\t\t/**\r\n\t\t * @type {ArrayBuffer}\r\n\t\t * @description tspResponse\r\n\t\t */\r\n\t\tthis.tspResponse = getParametersValue(parameters, \"tspResponse\", new ArrayBuffer(0));\r\n\t}\r\n\t//**********************************************************************************\r\n\t// noinspection JSUnusedGlobalSymbols\r\n\t/**\r\n\t * Get \"ArrayBuffer\" to transfer to time-stamp server\r\n\t * @param {SignedData} cmsSignedData CMS Signed Data to make attribute for\r\n\t * @param {number} signerIndex Index of signer to make attribute for\r\n\t * @param {Object} [parameters] Additional parameters for making attribute\r\n\t * @returns {Promise}\r\n\t */\r\n\tgetStampingBuffer(cmsSignedData, signerIndex, parameters = {})\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tlet sequence = Promise.resolve();\r\n\t\t\r\n\t\tlet hashAlgorithm = \"SHA-256\";\r\n\t\t\r\n\t\tlet resultBuffer = new ArrayBuffer(0);\r\n\t\t\r\n\t\tlet signatureTimeStamp; // SignatureTimeStamp\r\n\t\tlet completeCertificateReferences; // CompleteCertificateReferences\r\n\t\tlet completeRevocationReferences; // CompleteRevocationReferences\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get a \"crypto\" extension\r\n\t\tconst crypto = getCrypto();\r\n\t\tif(typeof crypto === \"undefined\")\r\n\t\t\treturn Promise.reject(\"Unable to create WebCrypto object\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check input parameters\r\n\t\tif(\"hashAlgorithm\" in parameters)\r\n\t\t\thashAlgorithm = parameters.hashAlgorithm;\r\n\t\t\r\n\t\tif(\"signatureTimeStamp\" in parameters)\r\n\t\t\tsignatureTimeStamp = parameters.signatureTimeStamp;\r\n\t\telse\r\n\t\t\treturn Promise.reject(\"Parameter \\\"signatureTimeStamp\\\" is mandatory for making \\\"CAdES-C-Timestamp\\\" attribute\");\r\n\t\t\r\n\t\tif(\"completeCertificateReferences\" in parameters)\r\n\t\t\tcompleteCertificateReferences = parameters.completeCertificateReferences;\r\n\t\telse\r\n\t\t\treturn Promise.reject(\"Parameter \\\"completeCertificateReferences\\\" is mandatory for making \\\"CAdES-C-Timestamp\\\" attribute\");\r\n\t\t\r\n\t\tif(\"completeRevocationReferences\" in parameters)\r\n\t\t\tcompleteRevocationReferences = parameters.completeRevocationReferences;\r\n\t\telse\r\n\t\t\treturn Promise.reject(\"Parameter \\\"completeRevocationReferences\\\" is mandatory for making \\\"CAdES-C-Timestamp\\\" attribute\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Make stamping buffer\r\n\t\tsequence = sequence.then(\r\n\t\t\t() => {\r\n\t\t\t\tresultBuffer = utilConcatBuf(resultBuffer, cmsSignedData.signerInfos[signerIndex].signature.valueBlock.valueHex);\r\n\t\t\t\tresultBuffer = utilConcatBuf(resultBuffer, signatureTimeStamp.makeAttribute().toSchema().toBER(false));\r\n\t\t\t\tresultBuffer = utilConcatBuf(resultBuffer, completeCertificateReferences.makeAttribute().toSchema().toBER(false));\r\n\t\t\t\tresultBuffer = utilConcatBuf(resultBuffer, completeRevocationReferences.makeAttribute().toSchema().toBER(false));\r\n\t\t\t},\r\n\t\t\terror => Promise.reject(error)\r\n\t\t);\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Make hash of signature\r\n\t\tsequence = sequence.then(\r\n\t\t\t() => crypto.digest({ name: hashAlgorithm }, resultBuffer),\r\n\t\t\terror => Promise.reject(error)\r\n\t\t);\r\n\t\t//endregion\r\n\t\t\r\n\t\treturn sequence;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Create \"CAdES-C-Timestamp\" CAdES attribute\r\n\t * @param {Object} parameters Additional parameters for making attribute\r\n\t * @returns {Attribute}\r\n\t */\r\n\tmakeAttribute(parameters)\r\n\t{\r\n\t\t//region Initial variables\r\n\t\tlet tspResponse;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Check input parameters\r\n\t\tif(\"tspResponse\" in parameters)\r\n\t\t\ttspResponse = parameters.tspResponse;\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(\"tspResponse\" in this)\r\n\t\t\t\ttspResponse = this.tspResponse;\r\n\t\t\telse\r\n\t\t\t\tthrow new Error(\"Parameter \\\"tspResponse\\\" is mandatory for making \\\"CAdES-C-Timestamp\\\" attribute\");\r\n\t\t}\r\n\t\t\r\n\t\tthis.tspResponse = tspResponse;\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Change type of \"tspResponse\"\r\n\t\tconst asn1 = asn1js.fromBER(tspResponse);\r\n\t\ttspResponse = new TimeStampResp({ schema: asn1.result });\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Initialize internal variables from \"tspResponse\"\r\n\t\tif(\"timeStampToken\" in tspResponse)\r\n\t\t\tthis.fromSchema(tspResponse.timeStampToken.toSchema());\r\n\t\telse\r\n\t\t\tthrow new Error(\"No neccessary \\\"timeStampToken\\\" inside \\\"tspResponse\\\"\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Create and return attribute\r\n\t\treturn new Attribute({\r\n\t\t\ttype: \"1.2.840.113549.1.9.16.2.25\",\r\n\t\t\tvalues: [\r\n\t\t\t\tthis.toSchema()\r\n\t\t\t]\r\n\t\t});\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}